# .golangci.yml
linters-settings:
  dupl:
    threshold: 100 # tokens count of duplicate code to trigger issue

  funlen:
    lines: 100
    statements: 50

  goconst:
    min-len: 2 # minimal length of string constant
    min-occurrences: 2 # minimal occurrences count to trigger

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc

  lll:
    line-length: 140 # max line length

  gocyclo:
    min-complexity: 10 # minimal code cyclomatic complexity to report

  golint:
    min-confidence: 0.8

  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return

  misspell:
    locale: US

  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

  govet:
    check-shadowing: false
    disable-all: true
    enable:
      - fieldalignment # tool to detect Go structs that would take less memory if their fields were sorted

  gocognit:
    min-complexity: 20 # minimal code cognitive complexity to report

  gofumpt:
    extra-rules: true


linters:
  disable-all: true
  enable:
#    - govet # Vet examines Go source code and reports suspicious constructs, only purpose of this tool is to detect go structs that would take less memory if their fields were sorted
    - bodyclose # Detects whether the HTTP response body is closed successfully, not closing the response body could lead to memory leaks
    - goconst # Finds repeated strings that could be replaced by a constant
    - gocritic # Provides many diagnostics that check for bugs, performance and style issues.
    - lll # Reports long lines
    - dupl # Detects code clones
    - funlen # Tool for detection of long functions
    - golint # Makes code style recomandations
    - gocyclo # Computes and checks the cyclomatic complexity of functions
#    - gofmt # Applies standard formatting
    - gofumpt # Stricter gofmt
    - deadcode #  Finds unused code
    - errcheck # Checks unchecked errors in go programs
    - gosimple # Linter for Go source code that specializes in simplifying a code
    - ineffassign # Detects when assignments to existing variables are not used
    - staticcheck # Staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - structcheck # Finds unused struct fields
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code
    - unused # Checks Go code for unused constants, variables, functions and types
    - varcheck # Finds unused global variables and constants
    - gocognit # Computes and checks the cognitive complexity of functions https://github.com/uudashr/gocognit
    - gosec # Inspects source code for security problems
    - prealloc # Finds slice declarations that could potentially be preallocated
    - nolintlint # Reports ill-formed or insufficient nolint directives
    - wsl # Whitespace Linter - Forces you to use empty lines!

issues:
  exclude-use-default: false
  fix: true

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - funlen
        - govet
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - lll

    - path: mock
      linters:
        - govet
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - golint

    # Exclude known linters from partially hard-vendored code,
    # which is impossible to exclude via "nolint" comments.
    - path: internal/entity/
      text: "weak cryptographic primitive"
      linters:
        - gosec
